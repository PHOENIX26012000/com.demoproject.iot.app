buildscript {
	ext {
		springBootVersion = '2.0.0.M5'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

group = 'com.demoproject.reactive'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	//Log4j
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.1'
	
	//FlyWay Migrate 
	compile('org.flywaydb:flyway-core')
	//MyBatis
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')
	//Spring React
	compile('org.springframework.boot:spring-boot-starter-webflux')
	//MySql DB Connector
	runtime('mysql:mysql-connector-java')
	//React Web Framework
	compile group: 'org.reactivestreams', name: 'reactive-streams', version: '1.0.1'
	compile group: 'io.projectreactor', name: 'reactor-core', version: '3.1.1.RELEASE'
	compile group: 'io.projectreactor.ipc', name: 'reactor-netty', version: '0.7.1.RELEASE'
	
	//compile 'com.google.cloud:google-cloud-examples:0.30.0-alpha'
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor:reactor-test')
}

task buildDocker(type: Docker, dependsOn: build) {
  applicationName = jar.baseName
  dockerfile = file('Dockerfile')
  doFirst {
    copy {
      from jar
      into "${stageDir}/target"
    }
  }
}